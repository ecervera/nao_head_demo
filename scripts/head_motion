#!/usr/bin/env python

import sys
import rospy

from std_srvs.srv import Empty
from naoqi_bridge_msgs.msg import JointAnglesWithSpeed

def enable_stiffness_client():
	rospy.wait_for_service('/body_stiffness/enable')
	try:
		enable_stiffness = rospy.ServiceProxy('/body_stiffness/enable', Empty)
		enable_stiffness()
	except rospy.ServiceException, e:
		print "Service call failed: %s"%e

def disable_stiffness_client():
	rospy.wait_for_service('/body_stiffness/disable')
	try:
		disable_stiffness = rospy.ServiceProxy('/body_stiffness/disable', Empty)
		disable_stiffness()
	except rospy.ServiceException, e:
		print "Service call failed: %s"%e

def send_joint_angles(yaw, pitch):
	pub = rospy.Publisher('/joint_angles', JointAnglesWithSpeed, queue_size=10)
	rospy.sleep(1.0)
	data = JointAnglesWithSpeed()
	data.joint_names = ["HeadYaw", "HeadPitch"]
	data.joint_angles = [yaw, pitch]
	data.speed = 0.1
	pub.publish(data)

def usage():
	return "%s [yaw pitch]" % sys.argv[0]

if __name__ == "__main__":
	if len(sys.argv) == 3:
		rospy.init_node('head_motion', anonymous=True)
		yaw = float(sys.argv[1])
		pitch = float(sys.argv[2])
		enable_stiffness_client()
		send_joint_angles(yaw, pitch)
		rospy.sleep(3.0)
		disable_stiffness_client()
	else:
		print usage()
		sys.exit(1)

